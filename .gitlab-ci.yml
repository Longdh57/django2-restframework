image: python:3.6

stages:
  - test
  - deploy

test:
  stage: test
  script:
    - cp .env.sample .env
    - sed -i "s/YOUR_MAIN_DB_NAME/$TEST_DB_NAME/g" .env
    - sed -i "s/YOUR_MAIN_USER/$TEST_USER/g" .env
    - sed -i "s/YOUR_MAIN_PASSWORD/$TEST_PASSWORD/g" .env
    - sed -i "s/YOUR_MAIN_HOST/$TEST_HOST/g" .env
    - sed -i "s/YOUR_MAIN_PORT/5432/g" .env
    - sed -i "s/YOUR_TEST_DB_NAME/$TEST_DB_NAME/g" .env
    - sed -i "s/YOUR_TEST_USER/$TEST_USER/g" .env
    - sed -i "s/YOUR_TEST_PASSWORD/$TEST_PASSWORD/g" .env
    - sed -i "s/YOUR_TEST_HOST/$TEST_HOST/g" .env
    - pip install -r requirements-dev.txt
    - python manage.py migrate
    - pytest
  only:
    - master
  tags:
    - marketing-portal

deploy:
  stage: deploy
  before_script:
    - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client git -y )'
    - eval $(ssh-agent -s)
    - ssh-add <(echo "$SSH_PRIVATE_KEY")
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
  script:
    - ssh "$SEVER_UNAME"@"$SEVER_HOST" "sudo systemctl stop sale_portal_v2 && cd sale_portal_v2 && git pull origin master && source .venv/bin/activate && pip install -r requirements.txt && python manage.py migrate --database=default && python manage.py collectstatic --noinput && sudo systemctl start sale_portal_v2 && exit"
  only:
    - master
  tags:
    - marketing-portal
