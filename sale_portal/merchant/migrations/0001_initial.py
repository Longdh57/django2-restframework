# Generated by Django 2.2.7 on 2019-11-06 09:56

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='QrMerchant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('merchant_code', models.TextField(null=True)),
                ('service_code', models.TextField(null=True)),
                ('merchant_brand', models.TextField(null=True)),
                ('merchant_name', models.TextField(null=True)),
                ('merchant_type', models.IntegerField(null=True)),
                ('address', models.TextField(null=True)),
                ('description', models.TextField(null=True)),
                ('status', models.IntegerField(default=1, null=True)),
                ('website', models.TextField(null=True)),
                ('master_merchant_code', models.TextField(null=True)),
                ('province_code', models.CharField(max_length=10, null=True)),
                ('district_code', models.CharField(max_length=10, null=True)),
                ('department', models.IntegerField(null=True)),
                ('staff', models.IntegerField(null=True)),
                ('genqr_checksum', models.IntegerField(null=True)),
                ('genqr_accesskey', models.TextField(null=True)),
                ('switch_code', models.IntegerField(default=1)),
                ('created_date', models.DateTimeField(null=True)),
                ('modify_date', models.DateTimeField(null=True)),
                ('process_user', models.TextField(null=True)),
                ('denied_approve_desc', models.TextField(null=True)),
                ('create_user', models.TextField(null=True)),
                ('org_status', models.IntegerField(null=True)),
                ('email_vnpay', models.TextField(null=True)),
                ('pass_email_vnpay', models.TextField(null=True)),
                ('process_addition', models.TextField(null=True)),
                ('denied_approve_code', models.IntegerField(default=0)),
                ('business_address', models.TextField(null=True)),
                ('app_user', models.TextField(null=True)),
                ('pin_code', models.TextField(null=True)),
                ('provider_code', models.TextField(null=True)),
                ('wards_code', models.CharField(max_length=10, null=True)),
            ],
            options={
                'db_table': 'qr_merchant',
                'ordering': ['-created_date'],
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='QrMerchantInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('merchant_code', models.TextField(null=True)),
                ('rm_auth', models.DecimalField(blank=True, decimal_places=0, max_digits=38, null=True)),
                ('register_sms', models.DecimalField(blank=True, decimal_places=0, max_digits=38, null=True)),
                ('register_ott', models.DecimalField(blank=True, decimal_places=0, max_digits=38, null=True)),
                ('to_create_user', models.DecimalField(blank=True, decimal_places=0, max_digits=38, null=True)),
                ('to_merchant', models.DecimalField(blank=True, decimal_places=0, max_digits=38, null=True)),
                ('receive_phone', models.TextField(null=True)),
                ('receive_email', models.TextField(null=True)),
                ('contact_name', models.TextField(null=True)),
                ('contact_phone', models.TextField(null=True)),
                ('contact_email', models.TextField(null=True)),
                ('contact_phone1', models.TextField(null=True)),
                ('contact_phone2', models.TextField(null=True)),
                ('contact_email1', models.TextField(null=True)),
                ('contact_email2', models.TextField(null=True)),
            ],
            options={
                'db_table': 'qr_merchant_info',
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='QrTypeMerchant',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('type_code', models.CharField(max_length=150, null=True)),
                ('brand_name', models.CharField(max_length=150, null=True)),
                ('full_name', models.CharField(max_length=255, null=True)),
                ('description', models.TextField(null=True)),
                ('created_date', models.DateTimeField(null=True)),
                ('updated_date', models.DateTimeField(null=True)),
                ('status', models.IntegerField(default=1, null=True)),
            ],
            options={
                'db_table': 'qr_type_merchant',
                'ordering': ['-created_date'],
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='Merchant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('merchant_code', models.CharField(help_text='Equivalent with qr_merchant.merchant_code', max_length=20, null=True)),
                ('merchant_brand', models.CharField(help_text='Equivalent with qr_merchant.merchant_brand', max_length=200, null=True)),
                ('merchant_name', models.CharField(help_text='Equivalent with qr_merchant.merchant_name', max_length=100, null=True)),
                ('address', models.CharField(help_text='Equivalent with qr_merchant.address', max_length=150, null=True)),
                ('description', models.CharField(help_text='Equivalent with qr_merchant.description', max_length=100, null=True)),
                ('status', models.IntegerField(default=1, help_text='Equivalent with qr_merchant.status', null=True)),
                ('department', models.IntegerField(help_text='Equivalent with qr_merchant.department', null=True)),
                ('staff', models.IntegerField(help_text='Equivalent with qr_merchant.staff', null=True)),
                ('created_date', models.DateTimeField(help_text='Equivalent with qr_merchant.created_date', null=True)),
                ('modify_date', models.DateTimeField(help_text='Equivalent with qr_merchant.modify_date', null=True)),
                ('is_care', models.IntegerField(default=1)),
                ('un_care_date', models.DateTimeField(blank=True, null=True)),
                ('merchant_type', models.ForeignKey(blank=True, help_text='Equivalent with qr_merchant.merchant_type', null=True, on_delete=django.db.models.deletion.SET_NULL, to='merchant.QrTypeMerchant')),
            ],
            options={
                'db_table': 'merchant',
                'default_permissions': (),
            },
        ),
    ]
